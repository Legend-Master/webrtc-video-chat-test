:root {
	font-family: Arial, sans-serif;
	-webkit-tap-highlight-color: rgba(0, 0, 0, 0.1);

	--button-normal-color: hsl(204, 85%, 40%);
	--button-hover-color: hsl(204, 85%, 35%);
	--button-active-color: hsl(204, 85%, 30%);

	--button-normal-color-light: hsl(204, 85%, 96%);
	--button-hover-color-light: hsl(204, 85%, 93%);

	/* Color from Github --color-canvas-subtle */
	--subtle-background: hsl(210, 29%, 97%);
	--half-transparent: rgba(0, 0, 0, 0.5);

	--popup-z-index: 100;
	--local-video-z-index: 200;
}

*,
::before,
::after {
	box-sizing: border-box;
}

body {
	margin: 0;
}

button,
input,
textarea,
select {
	font: inherit;
}

[hidden] {
	display: none !important;
}

dialog {
	padding: 0;
	border: none;
	box-shadow: 0 0 8px var(--half-transparent);

	/* Why you can scroll the content behind the dialog??? */
	overscroll-behavior: contain;
}
dialog::backdrop {
	background-color: rgba(0, 0, 0, 0.2);
}
@media (prefers-reduced-motion: no-preference) {
	dialog,
	dialog::backdrop {
		transition-property: all, display, overlay;
		transition-duration: 0.2s;
		transition-behavior: allow-discrete !important;
	}
	dialog.closed,
	dialog.closed::backdrop {
		opacity: 0;
		pointer-events: none;
	}
	dialog.closed {
		scale: 95%;
	}
}

select {
	text-align: center;
	border: 1px solid var(--half-transparent);
	border-radius: 0;
	outline: none;
	padding: 0.4em 0.7em;
	cursor: pointer;
	background-color: white;
}
select:focus {
	border-color: var(--button-normal-color);
}

button {
	display: inline-flex;
}
:where(button) {
	padding: 0.5em 0.8em;
	border: none;
	cursor: pointer;
	color: white;
	background-color: var(--button-normal-color);

	-webkit-tap-highlight-color: transparent;
}
@media (hover: hover) {
	:where(button:hover) {
		background-color: var(--button-hover-color);
	}
}
:where(button:active, button.ontouch) {
	background-color: var(--button-active-color);
}

input {
	padding: 0.4em;
	border: 1px solid var(--half-transparent);
	outline: none;
}
input:focus {
	border-color: var(--button-normal-color);
}
input:invalid {
	border-color: brown;
}
input[type='checkbox'] {
	outline: revert;
	cursor: pointer;
	margin: 0;
	accent-color: var(--button-normal-color);
}
input[type='range'] {
	outline: revert;
	cursor: pointer;
	padding: 0;
}

code {
	font-family: Consolas, monospace;
	text-align: start;
}

:root:not(.started) body {
	height: 100vh;
	height: 100svh;
	display: grid;
}

main {
	display: grid;
	gap: 1em;
}

:root:not(.started) main {
	padding: 1.5em;
	max-height: 100%;
	overflow: hidden;

	align-content: center;
	grid-template-rows: min-content min-content minmax(0, min-content) min-content;
}

@media (width > 800px) {
	:root:not(.started) body {
		/* From material design 3 website */
		background-color: hsl(216, 56%, 98%);
	}

	:root:not(.started) main {
		background-color: white;
		margin: auto;
		box-shadow: 0px 2px 6px 0px rgba(0, 0, 0, 0.2);
		padding: 2em;
	}
}

:root.started main {
	/* display: grid; */
	grid-template-rows: min-content min-content auto;
	/* gap: 1em; */
	height: 100vh;
	height: 100svh;
}

header {
	font-size: 1.75em;

	display: flex;
	justify-content: flex-end;
	align-items: center;
}

header a {
	display: flex;
}

.flex-container {
	display: flex;
	justify-content: center;
	flex-wrap: wrap;
	gap: 1em;
}

#room-input-div {
	display: grid;
	justify-content: center;
	align-items: center;
	gap: 1em;
	grid-template-rows: min-content min-content;
}

#room-input-div > div {
	display: grid;
	grid-template-columns: auto min-content;
	justify-content: center;
	gap: 1em;
}

#room-input-div > h3 {
	font-size: 1.2em;
	font-weight: normal;
	text-align: center;
}

#room-input-div input {
	padding: 0.5em 1em;
	min-width: 0;
}

#room-input-div button {
	font-size: 1.2em;
	padding: 0.5em 1em;
}

#recent-rooms {
	display: grid;
	grid-template-rows: min-content minmax(0, min-content);
	gap: 0.5em;
	text-align: center;
}

#recent-rooms > h3 {
	font-size: 1.2em;
	font-weight: normal;
}

#recent-room-container {
	overflow: auto;
	margin: 1em;

	display: grid;
	grid-template-columns: repeat(2, minmax(0, 18em));
	grid-template-rows: repeat(3, 2.5em);
	justify-content: center;
	/* align-items: center; */
	gap: 1.5em;
}
@media (width < 600px) {
	#recent-room-container {
		grid-template-columns: repeat(1, minmax(0, 18em));
		grid-template-rows: repeat(6, 2.5em);
	}
}
#recent-room-container .place-holder {
	background-color: var(--subtle-background);
}

#connection-state-indicator {
	font-size: 1.5em;
	margin-top: 1em;
	margin-bottom: 0.5em;
	text-align: center;
}

#device-select-div {
	display: flex;
	justify-content: center;
	flex-wrap: wrap;
	gap: 1em;
}

#device-select-div > div {
	display: flex;
	width: 300px;
	height: 40px;
}
#device-select-div > div > *,
#device-select-div option {
	background-color: var(--button-normal-color-light);
}
@media (hover: hover) {
	#device-select-div > div > *:hover,
	#device-select-div > div > *:focus-visible {
		background-color: var(--button-hover-color-light);
	}
}
#device-select-div button {
	font-size: 1.3em;
}
#device-select-div select {
	border: none;
	flex-grow: 1;
	min-width: 0;
}
#device-select-div select:not(:first-child) {
	border-left: white solid 1px;
}

/* .text-button {
	font-size: 1.2em;
	padding: 4px;
	border: none;
	font-weight: bold;
	color: var(--button-normal-color);
	background: none;
	cursor: pointer;
}
@media (hover: hover) {
	.text-button:hover {
		color: var(--button-hover-color);
		background: none;
	}
}
.text-button:active,
.text-button.ontouch {
	color: var(--button-active-color);
	background: none;
} */

.icon-button {
	/* For the icon inside */
	justify-content: center;
	align-items: center;

	padding: 0.5em;

	color: var(--button-normal-color);
	background-color: transparent;
	/* background-clip: padding-box; */

	cursor: pointer;
	user-select: none;

	/* border: 1px solid transparent; */
	/* border-radius: 50%; */

	/* For pseudo elements */
	position: relative;
}
/*
For after click animation

::before is for background
::after is for border

Not doing this on the element it self is
because it's impossible to do transition/animation only on switching state away from :active
*/
.icon-button::before,
.icon-button::after {
	content: '';

	position: absolute;
	inset: 0;

	background-color: transparent;
	/* background-clip: padding-box; */

	border: 1px solid transparent;
	border-radius: inherit;

	/* Desktop web YouTube */
	transition: background-color ease-out 0.1s, border-color ease-in-out 0.4s;
	/* Android YouTube app (1/6s, 1/3s) */
	/* transition: background-color 0.17s, border-color 0.33s; */
}
.icon-button:active::before,
.icon-button.ontouch::before,
.icon-button:active::after,
.icon-button.ontouch::after {
	transition: none;
}
.icon-button:not(:disabled):active::before,
.icon-button:not(:disabled).ontouch::before {
	background-color: rgba(0, 0, 0, 0.1);
}
.icon-button:not(:disabled):active::after,
.icon-button:not(:disabled).ontouch::after {
	opacity: 0;
	border-color: rgba(0, 0, 0, 0.2);
}
@media (hover: hover) {
	.icon-button:not(:disabled):hover {
		color: var(--button-hover-color);
		background-color: rgba(0, 0, 0, 0.1);
	}
}
.icon-button:not(:disabled):active,
.icon-button:not(:disabled).ontouch {
	color: var(--button-active-color);
}

#remote-video-container {
	/* display: grid; */
	/* grid-auto-flow: column; */
	display: flex;
	justify-content: center;
	justify-items: center;
	align-items: stretch;
	/* Doesn't work on Firefox without this */
	overflow: hidden;

	gap: 1em;

	/* max-height: 70vh; */
	/* background-color: rgba(0, 0, 0, 0.8); */
}
@media (width < 1000px) {
	#remote-video-container {
		flex-direction: column;
	}
}

#remote-video-container > div {
	height: 100%;
	max-width: 100%;
}

/* Only non-hidden child */
#remote-video-container > div.only-child {
	aspect-ratio: 16 / 9;
}

#remote-video-container custom-video {
	width: 100%;
	height: 100%;
}

/* Safari hack, aspect ratio doesn't work with flex align-items stretch */
#remote-video-container:has(custom-video:not(.started)) {
	align-items: center;
}

#welcome-dialog > form {
	padding: 2em 1em;
	max-width: 450px;

	display: grid;
	justify-items: center;
	gap: 1em;
	line-height: 1.5;
}
#welcome-dialog > form > h2 {
	text-align: center;
	margin: 0;
}
#welcome-dialog > form ul {
	display: grid;
	gap: 0.25em;
}

#config-ice-dialog {
	max-width: 100%;
	max-height: 80%;
}
#config-ice-dialog > div {
	flex-direction: column;
	padding: 2em;
}
@media (width < 500px) {
	#config-ice-dialog > div {
		padding: 2em 1em;
	}
}
.import-container {
	display: flex;
	justify-content: space-between;
	gap: 1em;
	padding: 0 1em;
	max-width: 100%;
}
.import-container input {
	flex-grow: 1;
	overflow: auto;
}
#ice-server-container {
	width: 500px;
	max-width: 100%;
	max-height: 50vh;
	overflow: auto;
}
#ice-server-container > div {
	display: flex;
	justify-content: space-between;
	gap: 1em;
	text-align: left;
	max-width: 100%;
	padding: 0.5em;
}
#ice-server-container > div:not(:first-child) {
	border-top: 1px solid rgba(0, 0, 0, 0.2);
}
#ice-server-container label {
	flex-grow: 1;
	flex-wrap: nowrap;
	cursor: pointer;
	overflow: auto;

	display: flex;
	align-items: center;
	gap: 1em;
}
#ice-server-container label span {
	overflow-wrap: break-word;
	overflow: auto;
}
#ice-server-container input[type='checkbox'] {
	margin-left: revert;
}
#ice-server-container .button-container {
	display: flex;
	flex-wrap: nowrap;
	font-size: 1.1em;
}

#add-ice-dialog {
	width: 325px;
}
#add-ice-dialog > form {
	flex-direction: column;
	gap: 2em;
	padding: 2em;
}
.form-input-container {
	flex-direction: column;
	gap: 1.5em;
}
.form-input-container > div {
	display: flex;
	flex-direction: column;
	gap: 0.5em;
	text-align: left;
}

#export-ice-dialog {
	width: 500px;
}

.export-container {
	padding: 2em;
	display: flex;
	flex-direction: column;
	gap: 1em;
}

.export-container > div {
	display: flex;
	justify-content: space-between;
	align-items: center;
	gap: 1em;
	background-color: var(--subtle-background); /* Color from Github --color-canvas-subtle */
	padding: 1em;
}

.export-container code {
	display: block;
	overflow: auto;
	overflow-wrap: break-word;
	font-size: 0.9em;
	line-height: 1.45;
}

.export-container button {
	font-size: 1.3em;
}

@media (prefers-reduced-motion: reduce) {
	::view-transition-old(root),
	::view-transition-new(root) {
		animation: none;
	}
	/* ::view-transition-old(device-select),
	::view-transition-new(device-select) {
		animation: none;
	}
	::view-transition-group(device-select) {
		animation: none;
	} */
}

::view-transition-old(root) {
	animation: root-transition-old 0.3s;
}
::view-transition-new(root) {
	animation: root-transition-new 0.3s;
}

@keyframes root-transition-old {
	50% {
		opacity: 0;
	}
	to {
		scale: 1.2;
	}
}

@keyframes root-transition-new {
	from {
		scale: 0.95;
		opacity: 0;
	}
	50% {
		opacity: 1;
	}
}

/* #device-select-div {
	view-transition-name: device-select;
	contain: layout;
} */
